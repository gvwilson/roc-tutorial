
── TYPE MISMATCH in ....1/x8URkvfyi9I0QhmVG98roKBUs_AZRkLFwFJVJ3942YA/main.roc ─

Something is off with the type annotation of the main required symbol:

2│      requires {} { main : Task {} I32 }
                             ^^^^^^^^^^^

This #UserApp.main value is a:

    (Num * -> Task.Task {} *)

But the type annotation on main says it should be:

    InternalTask.Task {} I32

Tip: Type comparisons between an opaque type are only ever equal if
both types are the same opaque type. Did you mean to create an opaque
type by wrapping it? If I have an opaque type Age := U32 I can create
an instance of this opaque type by doing @Age 23.


── TYPE MISMATCH in ....1/x8URkvfyi9I0QhmVG98roKBUs_AZRkLFwFJVJ3942YA/main.roc ─

Something is off with the body of the mainForHost definition:

26│  mainForHost : Task {} I32 as Fx
27│  mainForHost = main
                   ^^^^

This #UserApp.main value is a:

    (Num * -> Task.Task {} *)

But the type annotation on mainForHost says it should be:

    InternalTask.Task {} I32

Tip: Type comparisons between an opaque type are only ever equal if
both types are the same opaque type. Did you mean to create an opaque
type by wrapping it? If I have an opaque type Age := U32 I can create
an instance of this opaque type by doing @Age 23.

────────────────────────────────────────────────────────────────────────────────

2 errors and 0 warnings found in 15 ms.

You can run the program anyway with roc run src/order-func-3-stdout.roc

